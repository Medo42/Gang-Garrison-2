<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    with(Character)
        solid = (team != other.team);
    
    if(pressedKeys &amp; $80) {
        if((!place_free(x,y+1) &amp;&amp; place_free(x,y) or collision_point(bbox_left-1, y, Obstacle, true, true) or collision_point(bbox_right+1, y, Obstacle, true, true)) and jumpStrength) {
            vspeed = -jumpStrength;
            if(place_free(x, y+1))
            {
                if(collision_point(bbox_left-1, y, Obstacle, true, true))
                    hspeed += 10;
                if(collision_point(bbox_right+1, y, Obstacle, true, true))
                    hspeed -= 10;
            }
            playsound(x,y,JumpSnd);
            doublejumpUsed = false;
        } else if((canDoublejump == 1) and (doublejumpUsed == 0) and (vspeed&gt;-jumpStrength)) {
            vspeed = -jumpStrength;
            playsound(x,y,JumpSnd);
            doublejumpUsed = 1;
        }
    }
    

       if((pressedKeys &amp; $02) and (alarm[0]&lt;1) &amp;&amp; charge == false) {
            currentWeaponIndex = (currentWeaponIndex+1) mod numWeapons;
            with(currentWeapon) {
            instance_destroy();}
              currentWeapon = instance_create(x,y,weapons[currentWeaponIndex]);
              currentWeapon.owner=id;
              currentWeapon.ownerPlayer=player;
              alarm[0]= 30;
              exit;
          }


    
    if(keyState &amp; $10) {
        with(currentWeapon) {
            event_user(1);
        }
    } else {
        with(currentWeapon) {
            event_user(3);
        }
    }
    
    // Right click
    if(keyState &amp; $08) {
        with(currentWeapon) {
            event_user(2);
        } 
    }

    // Cloak
    if ((pressedKeys &amp; $08) &amp;&amp; canCloak &amp;&amp; ((cloakAlpha == 0 and cloak) || (cloakAlpha == 1 and !cloak)) &amp;&amp; !intel) {
        cloak = !cloak;
    }

    if(keyState &amp; $40) {
        if(intel) {
            hspeed -= runPower*0.75;
        } else {
            hspeed -= runPower*0.85;
        }
    }
    
    if(keyState &amp; $20) {
        if(intel) {
            hspeed += runPower*0.75;
        } else {
            hspeed += runPower*0.85;
        }
    }
    
    if(pressedKeys &amp; $04) {
        setChatBubble(player, 11);
    }
    
    pressedKeys = 0;
    releasedKeys = 0;
    
    
    hspeed/=1.15;
    if(abs(hspeed)&lt;0.2) {
        hspeed=0;
        animationImage=0;
    }    
    
    if(place_free(x,y+1)) {
        vspeed += 0.6;
        if(vspeed&gt;10) {
            vspeed=10;
        }
        animationImage = 1;
    } else {
        if(place_free(x,y)) {
            doublejumpUsed = 0;
        }
    }
    
    if(speed&gt;15) {
        speed=15;
    }
    
    if(intel and random(1)&gt;0.91 and speed&gt;2.4) {
        var sheet;
        sheet = instance_create(x,y-11+random(9),LooseSheet);
        sheet.hspeed = hspeed;
    }
    
    animationImage = (animationImage+abs(hspeed)/20) mod CHARACTER_ANIMATION_LEN;
    
    with(Character)
        solid = false;
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
