<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">image_speed = 5/room_speed;

// Download finished
if (DM_DownloadStatus(handle) == 3)
{
    DM_StopDownload(handle);
    DM_CloseDownload(handle);

    if (!file_exists(tmpfile))
    {
        // File download presumably failed. Stop.
        instance_destroy();
        exit;
    }

    global.devMessagesChecked = true;
    
    // Process the received file
    var fp;

    fp = file_text_open_read(tmpfile);

    // read lines into array, so we can process them
    var messageArray, a, b;
    a = 0;
    for(fp = file_text_open_read(tmpfile); !file_text_eof(fp); file_text_readln(fp)) {
        messageArray[a] = file_text_read_string(fp);
        a += 1;
    }
    file_text_close(fp);
    file_delete(tmpfile);

    var c;
    for(c = 0; c &lt; a; c += 2)
    {
        switch(messageArray[c])
        {
        case "ShowMessage":
            var popup;
            popup = instance_create(250, 471, DevMessagePopup);
            popup.msg = messageArray[c+1];
            break;
        case "Version":
            versioncheck = (messageArray[c+1]);
            versionend = string_pos("!",versioncheck);
            version = string_copy(versioncheck,1,versionend-1);
            changeslength = string_length(versioncheck)-versionend;
            changes=string_copy(versioncheck,versionend+1,changeslength);
            if(real(version) &gt; VERSION)
            {
                var popup;
                popup = instance_create(250, 471, DevMessagePopup);
                popup.msg = "Updates have been made to Gang Garrison 2!##"+changes;
                popup.updating = true;
            }
            break;
        case "Background":
            var versioncheck, versionend, version, titlelength, title;
            versioncheck = (messageArray[c+1]);
            versionend = string_pos("!",versioncheck);
            version = real(string_copy(versioncheck,1,versionend-1));
            titlelength = string_length(versioncheck)-versionend;
            title=string_copy(versioncheck,versionend+1,titlelength);
            // newer version available
            if(version &gt; global.backgroundVersion) 
            {
                var downloader;
                downloader = instance_create(0, 0, BackgroundDownloader);
                downloader.version = version;
                downloader.title = title;
            }
            // reset to default background
            else if (version == 0 &amp;&amp; global.backgroundVersion != 0)
            {
                global.backgroundVersion = 0;
                global.backgroundTitle = "";
                ini_open("gg2.ini");
                ini_write_real("Background", "BackgroundVersion", global.backgroundVersion);
                ini_write_string("Background", "BackgroundTitle", global.backgroundTitle);
                ini_close();

                // Delete downloaded background if existant
                if (file_exists("background.png"))
                {
                    file_delete("background.png");
                }

                // fade in
                with (MainMenuController)
                {
                    event_user(1);
                }
            }
            break;
        }
    }
    
    instance_destroy();
    exit;
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
