<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// Downloading code. 

var downloadHandle, url, tmpfile, window_oldshowborder, window_oldfullscreen;
timeLeft = 0;
counter = 0;
AudioControlPlaySong(-1, false);
window_oldshowborder = window_get_showborder();
window_oldfullscreen = window_get_fullscreen();
window_set_fullscreen(false);
window_set_showborder(false);

if(global.updaterBetaChannel)
    url = UPDATE_SOURCE_BETA;
else
    url = UPDATE_SOURCE;

tmpfile = temp_directory + "\gg2update.zip";
    
downloadHandle = DM_CreateDownload(url, tmpfile);
DM_StartDownload(downloadHandle);

while(DM_DownloadStatus(downloadHandle) != 3) 
{ // while download isn't finished
    sleep(floor(1000/30)); // sleep for the equivalent of one frame
    io_handle(); // this prevents GameMaker from appearing locked-up
    
    // check if the user cancelled the download with the esc key
    if(keyboard_check(vk_escape)) 
    {
        DM_StopDownload(downloadHandle);
        DM_CloseDownload(downloadHandle);
        if(file_exists(tmpfile))
            file_delete(tmpfile);
        window_set_showborder(window_oldshowborder);
        window_set_fullscreen(window_oldfullscreen);
        room_goto_fix(Menu);
        exit;
    }
     
    if(counter == 0 || counter mod 60 == 0)
        timer = random(359)+1;
    draw_sprite(UpdaterBackgroundS,0,0,0);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    draw_set_valign(fa_center);
    minutes=floor(timer/60);
    seconds=floor(timer-minutes*60);
    draw_text(x,y-20,string(minutes) + " minutes " + string(seconds) + " seconds Remaining...");
    counter+=1;
    progressBar = floor(DM_GetCompleted(downloadHandle)/5);
    offset = 3;
    for(i=0;i&lt;progressBar;i+=1){
        draw_sprite(UpdaterProgressS,0,x+offset,y);
        offset+=12;
    }
    screen_refresh();
}
DM_StopDownload(downloadHandle);
DM_CloseDownload(downloadHandle);

// rename existing "Gang Garrison 2.exe" to avoid conflict when extracting
if (file_exists("Gang Garrison 2.exe"))
{
    var newName;
    newName = "Gang Garrison 2-old";
    
    // running version of GG2 is called "Gang Garrison 2.exe"
    // hence, we know its version
    if (filename_name(parameter_string(0)) == "Gang Garrison 2.exe")
    {
        newName += "-" + GAME_VERSION_STRING;
    }

    var suffixedNewName, n;
    suffixedNewName = newName;
    n = 0;

    // increment until unused name found
    while (file_exists(suffixedNewName + ".exe"))
    {
        n += 1;
        suffixedNewName = newName + "-" + string(n);
    }

    file_rename("Gang Garrison 2.exe", suffixedNewName + ".exe");
}

if(!file_exists(tmpfile))
{
    window_set_showborder(window_oldshowborder);
    window_set_fullscreen(window_oldfullscreen);
    show_message("Error updating: Missing gg2update.zip in temp directory, download failed(?)");
    room_goto_fix(Menu);
    exit;
}

// let's extract the downloaded file now.
extractzip(tmpfile, working_directory);

// run new version    
execute_program("Gang Garrison 2.exe", "", false);

// exit
game_end();
</argument>
      </arguments>
    </action>
  </actions>
</event>
