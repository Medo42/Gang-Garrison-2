<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if(owner.taunting or owner.omnomnomnom or owner.player.humiliated)
    exit;
if (justShot) {
    justShot = false
}
var imageOffset, xdrawpos, ydrawpos;
imageOffset = owner.team;
xdrawpos = round(x+xoffset*image_xscale);
ydrawpos = round(y+yoffset);
if (alarm[6] &lt;= 0){
        //if we are not shooting, but dropping
        if (alarm[7] &gt; 0) {
            imageOffset = floor(image_index mod dropAnimLength) + dropAnimLength*owner.team
        }else{
            //set the sprite to idle
            imageOffset = owner.team;
        }
}else{
    //We are shooting, loop the shoot animation
    imageOffset = floor(image_index mod recoilAnimLength) + recoilAnimLength*owner.team
}
    draw_sprite_ext(sprite_index,imageOffset, xdrawpos, ydrawpos, image_xscale, image_yscale, image_angle, c_white, 1);
    if (sprite_index == MinigunDropS) {
        draw_sprite_ext(overlayDropSprite,imageOffset, xdrawpos, ydrawpos, image_xscale, image_yscale, image_angle, c_red,0.5*(1-(ammoCount/maxAmmo)));
    }else if (sprite_index == MinigunS) {
         draw_sprite_ext(overlaySprite,imageOffset, xdrawpos, ydrawpos, image_xscale, image_yscale, image_angle, c_red,0.5*(1-(ammoCount/maxAmmo)));
    }else if (sprite_index == MinigunFS) {
        draw_sprite_ext(overlayFiringSprite,imageOffset, xdrawpos, ydrawpos, image_xscale, image_yscale, image_angle, c_red,0.5*(1-(ammoCount/maxAmmo)));
    }
</argument>
      </arguments>
    </action>
  </actions>
</event>
